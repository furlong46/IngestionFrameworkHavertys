{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mdp-demo"
		},
		"ls_ADLSGen2_dataanalyticsadls21_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_ADLSGen2_dataanalyticsadls21'"
		},
		"ls_AzureDatabricks_DataAnalyticsQA_ADBX_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_AzureDatabricks_DataAnalyticsQA_ADBX'"
		},
		"ls_AzureSqlDatabase_HavertysDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_AzureSqlDatabase_HavertysDW'"
		},
		"ls_sourcesystem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sourcesystem'"
		},
		"ls_ADLSGen2_dataanalyticsadls21_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsmdpdemo.dfs.core.windows.net"
		},
		"ls_KV_KV21_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-mdp-demo.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_ADLSGen2_dataanalyticsadls21')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connect to ADLS Gen 2 via key vault using storage key secret",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_ADLSGen2_dataanalyticsadls21_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_ADLSGen2_dataanalyticsadls21_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureDatabricks_DataAnalyticsQA_ADBX')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_AzureDatabricks_DataAnalyticsQA_ADBX_accessToken')]"
					},
					"existingClusterId": "0402-152549-adder831"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSqlDatabase_HavertysDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_AzureSqlDatabase_HavertysDW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_KV_KV21')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a linked service to our Key Vault service",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_KV_KV21_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sourcesystem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sourcesystem_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateway01IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Self hosted IR running on Gateway01",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MDFIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 36,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ADLSG2parquet_DataLakeIngestionDir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ADLSGen2_dataanalyticsadls21",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string",
						"defaultValue": "datalake/staging/master data/product/DB203002"
					}
				},
				"folder": {
					"name": "DataLake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@substring(dataset().FolderPath, indexof(dataset().FolderPath, '/'), sub(length(dataset().FolderPath), indexof(dataset().FolderPath, '/')) )",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@substring(dataset().FolderPath, 0, indexof(dataset().FolderPath, '/') )",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ADLSGen2_dataanalyticsadls21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ADLSG2parquet_DataLakeIngestionNamedFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ADLSGen2_dataanalyticsadls21",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "string",
						"defaultValue": "datalake/staging/master data/product/DB203002"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Testing.parquet"
					}
				},
				"folder": {
					"name": "DataLake"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@substring(dataset().FolderPath, indexof(dataset().FolderPath, '/'), sub(length(dataset().FolderPath), indexof(dataset().FolderPath, '/')) )",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@substring(dataset().FolderPath, 0, indexof(dataset().FolderPath, '/') )",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ADLSGen2_dataanalyticsadls21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSQLTable_ETL_Configurations')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ConfigKey",
						"type": "varchar"
					},
					{
						"name": "ConfigValue",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "ETL",
					"table": "Configurations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_DW_DimDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Date_sk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Isworkday_Store",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Isworkday_Delivery",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_date",
						"type": "date"
					},
					{
						"name": "Calendar_name_sht",
						"type": "varchar"
					},
					{
						"name": "Calendar_name_lng",
						"type": "varchar"
					},
					{
						"name": "Calendar_year_day_number",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Calendar_year_day_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_quarter_day_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_quarter_day_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_month_day_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_month_day_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_weekday_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_weekday_code",
						"type": "char"
					},
					{
						"name": "Calendar_weekday_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_week_of_month_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_week_of_month_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_week_of_year_number",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Calendar_week_of_year_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_month_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_month_code",
						"type": "char"
					},
					{
						"name": "Calendar_month_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_quarter_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Calendar_quarter_code",
						"type": "char"
					},
					{
						"name": "Calendar_quarter_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_month_week_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Calendar_month_week_year_code",
						"type": "varchar"
					},
					{
						"name": "Calendar_month_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Calendar_month_year_code",
						"type": "varchar"
					},
					{
						"name": "Calendar_quarter_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Calendar_quarter_year_code",
						"type": "varchar"
					},
					{
						"name": "Calendar_quarter_year_name",
						"type": "varchar"
					},
					{
						"name": "Calendar_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Calendar_year_name",
						"type": "varchar"
					},
					{
						"name": "Reporting_week_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Reporting_weekending_date",
						"type": "date"
					},
					{
						"name": "Reporting_weekending_name",
						"type": "varchar"
					},
					{
						"name": "Reporting_weekday_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Reporting_month_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Reporting_month_code",
						"type": "char"
					},
					{
						"name": "Reporting_month_name",
						"type": "varchar"
					},
					{
						"name": "Reporting_quarter_number",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Reporting_quarter_code",
						"type": "char"
					},
					{
						"name": "Reporting_quarter_name",
						"type": "varchar"
					},
					{
						"name": "Reporting_month_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reporting_month_year_code",
						"type": "varchar"
					},
					{
						"name": "Reporting_quarter_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reporting_quarter_year_code",
						"type": "varchar"
					},
					{
						"name": "Reporting_quarter_year_name",
						"type": "varchar"
					},
					{
						"name": "Reporting_year_number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reporting_year_name",
						"type": "varchar"
					},
					{
						"name": "Holiday_name",
						"type": "varchar"
					},
					{
						"name": "ETLBatchID_Insert",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ETLBatchID_Update",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DW",
					"table": "Dim_Date"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_DW_DimTime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Time_sk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Time24_code",
						"type": "time",
						"scale": 0
					},
					{
						"name": "Time24_name",
						"type": "varchar"
					},
					{
						"name": "Hour_code",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Hour_name",
						"type": "varchar"
					},
					{
						"name": "Hour24_code",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Hour24_name",
						"type": "varchar"
					},
					{
						"name": "Minute_code",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Minute_name",
						"type": "varchar"
					},
					{
						"name": "Minute24_code",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Minute24_name",
						"type": "varchar"
					},
					{
						"name": "Second_code",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Second_name",
						"type": "varchar"
					},
					{
						"name": "Second24_code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Second24_name",
						"type": "varchar"
					},
					{
						"name": "AmPm",
						"type": "varchar"
					},
					{
						"name": "StandardTime",
						"type": "varchar"
					},
					{
						"name": "ETLBatchID_Insert",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ETLBatchID_Update",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DW",
					"table": "Dim_Time"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_ETL_Ingestion1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourcesystem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DB2SchemaTable",
						"type": "varchar"
					},
					{
						"name": "DataLakeSchemaTable",
						"type": "varchar"
					},
					{
						"name": "PKColumnList",
						"type": "varchar"
					},
					{
						"name": "ControlTable",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn2",
						"type": "varchar"
					},
					{
						"name": "ControlStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlFilterValue",
						"type": "varchar"
					},
					{
						"name": "ControlFilterType",
						"type": "varchar"
					},
					{
						"name": "ControlProcessNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SelectQuery",
						"type": "varchar"
					},
					{
						"name": "DataLakeStagingFolder",
						"type": "varchar"
					},
					{
						"name": "ServerName",
						"type": "varchar"
					},
					{
						"name": "SqlOverrideQuery",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "ETL",
					"table": "MetadataIngestionList"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourcesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_ETL_Ingestion2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourcesystem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DB2SchemaTable",
						"type": "varchar"
					},
					{
						"name": "DataLakeSchemaTable",
						"type": "varchar"
					},
					{
						"name": "PKColumnList",
						"type": "varchar"
					},
					{
						"name": "ControlTable",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn2",
						"type": "varchar"
					},
					{
						"name": "ControlStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlFilterValue",
						"type": "varchar"
					},
					{
						"name": "ControlFilterType",
						"type": "varchar"
					},
					{
						"name": "ControlProcessNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SelectQuery",
						"type": "varchar"
					},
					{
						"name": "DataLakeStagingFolder",
						"type": "varchar"
					},
					{
						"name": "ServerName",
						"type": "varchar"
					},
					{
						"name": "SqlOverrideQuery",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "ETL",
					"table": "MetadataIngestionList"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourcesystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_ETL_Master')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AzureTableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SchemaTable",
						"type": "varchar"
					},
					{
						"name": "PKColumnList",
						"type": "varchar"
					},
					{
						"name": "FilterColumn",
						"type": "varchar"
					},
					{
						"name": "FilterColumnValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SelectQuery",
						"type": "varchar"
					},
					{
						"name": "DataLakeStagingFolder",
						"type": "varchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_ETL_MetadataIngestionControlDateRanges')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DB2TableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DB2SchemaTable",
						"type": "varchar"
					},
					{
						"name": "DB2ControlTable",
						"type": "varchar"
					},
					{
						"name": "DB2ControlTableStartDateColumn",
						"type": "varchar"
					},
					{
						"name": "DB2ControlTableEndDateColumn",
						"type": "varchar"
					},
					{
						"name": "ControlProcessNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ControlStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "ETL",
					"table": "MetadataIngestionControlDateRanges"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable_ETL_MetadataIngestionList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HavertysDW"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DB2SchemaTable",
						"type": "varchar"
					},
					{
						"name": "DataLakeSchemaTable",
						"type": "varchar"
					},
					{
						"name": "PKColumnList",
						"type": "varchar"
					},
					{
						"name": "ControlTable",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn",
						"type": "varchar"
					},
					{
						"name": "ControlFilterColumn2",
						"type": "varchar"
					},
					{
						"name": "ControlStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ControlFilterValue",
						"type": "varchar"
					},
					{
						"name": "ControlFilterType",
						"type": "varchar"
					},
					{
						"name": "ControlProcessNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SelectQuery",
						"type": "varchar"
					},
					{
						"name": "DataLakeStagingFolder",
						"type": "varchar"
					},
					{
						"name": "ServerName",
						"type": "varchar"
					},
					{
						"name": "SqlOverrideQuery",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "ETL",
					"table": "MetadataIngestionList"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_pl_AAS_Processing_AzureAutoHook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP_MasterJobEnd_Success",
						"description": "This stored procedure receives the MasterProcessNumber as input and updates the status of the MasterJob table after successful execution of previous steps.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Full or Incremental AAS Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_MasterJobEnd_Success]",
							"storedProcedureParameters": {
								"MasterProcessNumber": {
									"value": {
										"value": "@pipeline().parameters.MasterProcessNumber",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureSqlDatabase_HavertysDW",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_MasterJobEnd_Failure_Pipeline",
						"description": "This stored procedure receives the MasterProcessNumber as input and updates the status of the MasterJob table after failed execution of previous steps.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Full or Incremental AAS Processing",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_MasterJobEnd_Failure]",
							"storedProcedureParameters": {
								"MasterProcessNumber": {
									"value": {
										"value": "@pipeline().parameters.MasterProcessNumber",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureSqlDatabase_HavertysDW",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Full or Incremental AAS Processing",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_KeyValueConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.RunType, 'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Web_AzureAutomation_Webhook_Full",
									"type": "WebHook",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Lookup_KeyValueConfig').output.firstRow.WebHookFull",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@json(concat('{\"AnalysisServicesDatabaseName\":\"Havertys Semantic Layer\",\"AnalysisServicesServer\":\"', activity('Lookup_KeyValueConfig').output.firstRow.AnalysisServicesServer,'\"}'))",
											"type": "Expression"
										},
										"timeout": "01:00:00",
										"reportStatusOnCallBack": true
									}
								},
								{
									"name": "Web_AzureAutomation_Webhook_Full_copy1",
									"type": "WebHook",
									"dependsOn": [
										{
											"activity": "Web_AzureAutomation_Webhook_Full",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Lookup_KeyValueConfig').output.firstRow.WebHookFull",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@json(concat('{\"AnalysisServicesDatabaseName\":\"Havertys Semantic Layer\",\"AnalysisServicesServer\":\"', activity('Lookup_KeyValueConfig').output.firstRow.AnalysisServicesServer,'\"}'))",
											"type": "Expression"
										},
										"timeout": "01:00:00",
										"reportStatusOnCallBack": true
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Web_AzureAutomation_Webhook_Incremental",
									"type": "WebHook",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Lookup_KeyValueConfig').output.firstRow.WebHookFull",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@json(concat('{\"AnalysisServicesDatabaseName\":\"Havertys Semantic Layer\",\"AnalysisServicesServer\":\"', activity('Lookup_KeyValueConfig').output.firstRow.AnalysisServicesServer,'\"}'))",
											"type": "Expression"
										},
										"timeout": "01:00:00",
										"reportStatusOnCallBack": true
									}
								},
								{
									"name": "Web_AzureAutomation_Webhook_Incremental_copy1",
									"type": "WebHook",
									"dependsOn": [
										{
											"activity": "Web_AzureAutomation_Webhook_Incremental",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Lookup_KeyValueConfig').output.firstRow.WebHookFull",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@json(concat('{\"AnalysisServicesDatabaseName\":\"Havertys Semantic Layer\",\"AnalysisServicesServer\":\"', activity('Lookup_KeyValueConfig').output.firstRow.AnalysisServicesServer,'\"}'))",
											"type": "Expression"
										},
										"timeout": "01:00:00",
										"reportStatusOnCallBack": true
									}
								}
							]
						}
					},
					{
						"name": "Lookup_KeyValueConfig",
						"description": "This LookUp calls a stored procedure which\npulls the key/value pairs ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT dbo.udf_GetETLConfiguration('WebHookFull') AS WebHookFull,\n\t   dbo.udf_GetETLConfiguration('WebHookIncremental') AS WebHookIncremental,\n\t   dbo.udf_GetETLConfiguration('AnalysisServicesServer') AS AnalysisServicesServer,\n\t   dbo.udf_GetETLConfiguration('AzureSQLServerName') AS AzureSQLServerName,\n\t   dbo.udf_GetETLConfiguration('AzureSQLDatabaseName') AS AzureSQLDatabaseName,\n\t   dbo.udf_GetETLConfiguration('SubscriptionID') AS SubscriptionID,\n\t   dbo.udf_GetETLConfiguration('ResourceGroupName') AS ResourceGroupName,\n           dbo.udf_GetETLConfiguration('SQLComputeSizeHigh') AS SQLComputeSizeHigh,\n\t   dbo.udf_GetETLConfiguration('SQLComputeSizeLow') AS SQLComputeSizeLow",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_AzureSqlTable_ETL_Master",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"MasterProcessNumber": {
						"type": "int",
						"defaultValue": 1
					},
					"RunType": {
						"type": "string",
						"defaultValue": "N"
					}
				},
				"folder": {
					"name": "AAS Processing"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_HavertysDW')]",
				"[concat(variables('factoryId'), '/datasets/ds_AzureSqlTable_ETL_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_pl_AzureSQLDB_Scaling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADF_Scale_Azure_SQLDB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup_KeyValueConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/', activity('Lookup_KeyValueConfig').output.firstRow.SubscriptionID,'/resourceGroups/',activity('Lookup_KeyValueConfig').output.firstRow.ResourceGroupName, '/providers/Microsoft.Sql/servers/',activity('Lookup_KeyValueConfig').output.firstRow.AzureSQLServerName,'/databases/',activity('Lookup_KeyValueConfig').output.firstRow.AzureSQLDatabaseName,'?api-version=2017-10-01-preview')",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@json(concat('{\"sku\":{\"name\":\"', pipeline().parameters.ComputeSize, '\",\"tier\":\"', pipeline().parameters.ServiceTier, '\"}, \"location\": \"', pipeline().parameters.AzureRegionName, ' \"}' ) )",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Lookup_KeyValueConfig",
						"description": "This LookUp calls a stored procedure which\npulls the key/value pairs ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [dbo].[udf_GetETLConfiguration]('AzureSQLServerName') AS AzureSQLServerName,\n\t   [dbo].[udf_GetETLConfiguration]('AzureSQLDatabaseName') AS AzureSQLDatabaseName,\n\t   [dbo].[udf_GetETLConfiguration]('SubscriptionID') AS SubscriptionID,\n\t   [dbo].[udf_GetETLConfiguration]('ResourceGroupName') AS ResourceGroupName",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_AzureSqlTable_ETL_Master",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"ServiceTier": {
						"type": "String",
						"defaultValue": "GeneralPurpose"
					},
					"AzureRegionName": {
						"type": "String",
						"defaultValue": "East US"
					},
					"ComputeSize": {
						"type": "string",
						"defaultValue": "GP_Gen5_2"
					}
				},
				"folder": {
					"name": "MasterPipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_AzureSqlTable_ETL_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_pl_AzureSQLDB_Scaling_ScaleDown')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADF_Scale_Azure_SQLDB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup_KeyValueConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/', activity('Lookup_KeyValueConfig').output.firstRow.SubscriptionID,'/resourceGroups/',activity('Lookup_KeyValueConfig').output.firstRow.ResourceGroupName, '/providers/Microsoft.Sql/servers/',activity('Lookup_KeyValueConfig').output.firstRow.AzureSQLServerName,'/databases/',activity('Lookup_KeyValueConfig').output.firstRow.AzureSQLDatabaseName,'?api-version=2017-10-01-preview')",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@json(concat('{\"sku\":{\"name\":\"', activity('Lookup_KeyValueConfig').output.firstRow.SQLComputeSizeLow, '\",\"tier\":\"', pipeline().parameters.ServiceTier, '\"}, \"location\": \"', pipeline().parameters.AzureRegionName, ' \"}' ) )",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Lookup_KeyValueConfig",
						"description": "This LookUp calls a stored procedure which\npulls the key/value pairs ",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [dbo].[udf_GetETLConfiguration]('AzureSQLServerName') AS AzureSQLServerName,\n\t   [dbo].[udf_GetETLConfiguration]('AzureSQLDatabaseName') AS AzureSQLDatabaseName,\n\t   [dbo].[udf_GetETLConfiguration]('SubscriptionID') AS SubscriptionID,\n\t   [dbo].[udf_GetETLConfiguration]('ResourceGroupName') AS ResourceGroupName,\n           dbo.udf_GetETLConfiguration('SQLComputeSizeHigh') AS SQLComputeSizeHigh,\n\t   dbo.udf_GetETLConfiguration('SQLComputeSizeLow') AS SQLComputeSizeLow",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_AzureSqlTable_ETL_Master",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"ServiceTier": {
						"type": "String",
						"defaultValue": "GeneralPurpose"
					},
					"AzureRegionName": {
						"type": "String",
						"defaultValue": "East US"
					}
				},
				"folder": {
					"name": "MasterPipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_AzureSqlTable_ETL_Master')]"
			]
		}
	]
}