{
	"name": "ETL_pl_BlobFile_Subpipeline",
	"properties": {
		"activities": [
			{
				"name": "LookUp_BlobMetadataList",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_JobConfigurationBlobMetadataList]",
						"storedProcedureParameters": {
							"MasterProcessNumber": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.MasterProcessNumber",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "ds_AzureSqlTable_ETL_BlobMetadataIngestionList",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_CopyStagingRaw",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookUp_BlobMetadataList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookUp_BlobMetadataList').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Delete_ExistingStaging",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "LookUp_JobTableLogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_ADLSG2parquet_DataLakeIngestionDir",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Switch_BlobFileType_CopyToADLStaging",
							"description": "Depending on the type of file, copies file from blob storage to a parquet file in staging in the data lake. In the case that no file type is given, json is assumed.",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "Delete_ExistingStaging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@toLower(coalesce(item().BlobFileType, ''))",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "json",
										"activities": [
											{
												"name": "Copy_BlobJson_ADLStaging",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_AzureBlobStorage_json_file",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@item().BlobFolder",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_ADLSG2parquet_DataLakeIngestionNamedFile",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
																"type": "Expression"
															},
															"FileName": {
																"value": "@concat(replace(item().FileName, '.', '_'), '_', string(pipeline().parameters.MasterProcessNumber), '.parquet')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "csv",
										"activities": [
											{
												"name": "Copy_BlobCSV_ADLStaging",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_AzureBlobStorage_csv_file",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@item().BlobFolder",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_ADLSG2parquet_DataLakeIngestionNamedFile",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
																"type": "Expression"
															},
															"FileName": {
																"value": "@concat(replace(item().FileName, '.', '_'), '_', string(pipeline().parameters.MasterProcessNumber), '.parquet')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "parquet",
										"activities": [
											{
												"name": "Copy_BlobParquet_ADLStaging",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ds_AzureBlobStorage_parquet_file",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@item().BlobFolder",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().FileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_ADLSG2parquet_DataLakeIngestionNamedFile",
														"type": "DatasetReference",
														"parameters": {
															"FolderPath": {
																"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
																"type": "Expression"
															},
															"FileName": {
																"value": "@concat(replace(item().FileName, '.', '_'), '_', string(pipeline().parameters.MasterProcessNumber), '.parquet')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Copy_BlobJson_ADLStaging_Default",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "ds_AzureBlobStorage_json_file",
												"type": "DatasetReference",
												"parameters": {
													"FolderPath": {
														"value": "@item().BlobFolder",
														"type": "Expression"
													},
													"FileName": {
														"value": "@item().FileName",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_ADLSG2parquet_DataLakeIngestionNamedFile",
												"type": "DatasetReference",
												"parameters": {
													"FolderPath": {
														"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
														"type": "Expression"
													},
													"FileName": {
														"value": "@concat(replace(item().FileName, '.', '_'), '_', string(pipeline().parameters.MasterProcessNumber), '.parquet')",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Copy_ADLStaging_ADLRaw",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Switch_BlobFileType_CopyToADLStaging",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Delete_ExistingRaw",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_ADLSG2parquet_DataLakeIngestionDir",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_ADLSG2parquet_DataLakeIngestionDir",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(replace(concat( item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_')), 'staging', 'raw'), '/TS=', string(item().StartTime))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete_ExistingRaw",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Delete_ExistingStaging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_ADLSG2parquet_DataLakeIngestionDir",
									"type": "DatasetReference",
									"parameters": {
										"FolderPath": {
											"value": "@concat(replace(concat( item().DataLakeStagingFolder, '/', replace(item().FileName, '.', '_')), 'staging', 'raw'), '/TS=', string(item().StartTime))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure2",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Switch_BlobFileType_CopyToADLStaging",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@activity('LookUp_JobTableLogStart').output.firstRow.JobTableLogID",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_AzureSqlDatabase_HavertysDW",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Execute ETL_pl_Error_StoredProcedure_Execute_2",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SP_JobTableLogEnd_Failure2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ETL_pl_Error_StoredProcedure_Execute",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"MasterProcessNumber": {
										"value": "@pipeline().parameters.MasterProcessNumber",
										"type": "Expression"
									},
									"RunType": {
										"value": "@pipeline().parameters.RunType",
										"type": "Expression"
									},
									"ErrorMessage": {
										"value": "Error in copying blob file to ADLStaging",
										"type": "Expression"
									},
									"RunId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"CallingPipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SP_JobTableLogEnd_Failure3",
							"description": "This stored procedures updates the status of the JobTableLog failed execution of previous steps.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_ADLStaging_ADLRaw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Failure]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@activity('LookUp_JobTableLogStart').output.firstRow.JobTableLogID",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_AzureSqlDatabase_HavertysDW",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Execute ETL_pl_Error_StoredProcedure_Execute_3",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SP_JobTableLogEnd_Failure3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ETL_pl_Error_StoredProcedure_Execute",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"MasterProcessNumber": {
										"value": "@pipeline().parameters.MasterProcessNumber",
										"type": "Expression"
									},
									"RunType": {
										"value": "@pipeline().parameters.RunType",
										"type": "Expression"
									},
									"ErrorMessage": {
										"value": "Error copying staging to raw",
										"type": "Expression"
									},
									"RunId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"CallingPipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "LookUp_JobTableLogStart",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[usp_JobTableLogStart]",
									"storedProcedureParameters": {
										"JobConfiguration": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.JobConfiguration",
												"type": "Expression"
											}
										},
										"MasterProcessNumber": {
											"type": "Int32",
											"value": {
												"value": "@pipeline().parameters.MasterProcessNumber",
												"type": "Expression"
											}
										},
										"SchemaTable": {
											"type": "String",
											"value": {
												"value": "@item().FileName",
												"type": "Expression"
											}
										},
										"TableControlType": {
											"type": "String",
											"value": "Blob"
										},
										"TableID": {
											"type": "Int32",
											"value": {
												"value": "@item().BlobFileID",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "ds_AzureSqlTable_ETL_Master",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Sp_JobTableLogEnd_Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_ADLStaging_ADLRaw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_JobTableLogEnd_Success]",
								"storedProcedureParameters": {
									"JobTableLogID": {
										"value": {
											"value": "@activity('LookUp_JobTableLogStart').output.firstRow.JobTableLogID",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_AzureSqlDatabase_HavertysDW",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP_MasterJobEnd_Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach_CopyStagingRaw",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_MasterJobEnd_Failure]",
					"storedProcedureParameters": {
						"MasterProcessNumber": {
							"value": {
								"value": "@pipeline().parameters.MasterProcessNumber",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_HavertysDW",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Execute ETL_pl_Error_StoredProcedure_Execute",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SP_MasterJobEnd_Failure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ETL_pl_Error_StoredProcedure_Execute",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"MasterProcessNumber": {
							"value": "@pipeline().parameters.MasterProcessNumber",
							"type": "Expression"
						},
						"RunType": {
							"value": "@pipeline().parameters.RunType",
							"type": "Expression"
						},
						"RunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"CallingPipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"JobConfiguration": {
				"type": "string",
				"defaultValue": "NightlyLoad"
			},
			"MasterProcessNumber": {
				"type": "int",
				"defaultValue": 359
			},
			"RunType": {
				"type": "string",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "MasterPipeline"
		},
		"annotations": []
	}
}