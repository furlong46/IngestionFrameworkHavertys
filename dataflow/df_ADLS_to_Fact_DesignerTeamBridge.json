{
	"name": "df_ADLS_to_Fact_DesignerTeamBridge",
	"properties": {
		"folder": {
			"name": "Fact_DataFlows/Replaced by DBX"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ADLSG2parquet_staging_sales_tbdwbld",
						"type": "DatasetReference"
					},
					"name": "Sourcetbdwbld"
				},
				{
					"dataset": {
						"referenceName": "ds_ADLSG2parquet_staging_sales_tbdwwrt",
						"type": "DatasetReference"
					},
					"name": "Sourcetbdwwrt"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_HavertysDW_Dim_Team",
						"type": "DatasetReference"
					},
					"name": "SourceDimTeam"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_Dim_Employee",
						"type": "DatasetReference"
					},
					"name": "SourceDimEmployee"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_HavertysDW_Fact_DesignerTeamBridge",
						"type": "DatasetReference"
					},
					"name": "SourceFactDesignerTeamBridge"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_HavertysDW_Fact_DesignerTeamBridge",
						"type": "DatasetReference"
					},
					"name": "SinkFactDesignerTeamBridge"
				}
			],
			"transformations": [
				{
					"name": "DistinctDesignerTeamMembers"
				},
				{
					"name": "SelectPairDownColumns2"
				},
				{
					"name": "DeriveOrdered2"
				},
				{
					"name": "SelecttbdwwrtPairColumns"
				},
				{
					"name": "UnionWithWritten1"
				},
				{
					"name": "DeriveMetadata1"
				},
				{
					"name": "LookupDimTeam"
				},
				{
					"name": "SelectDimTeam"
				},
				{
					"name": "SelectTeamMemberName2"
				},
				{
					"name": "DeriveReplaceNulls"
				},
				{
					"name": "DerivedConvertToInt"
				},
				{
					"name": "LookDimEmployee1"
				},
				{
					"name": "LookDimEmployee2"
				},
				{
					"name": "DeriveMetadata2"
				},
				{
					"name": "UnionTeamMember1AndTeamMember2"
				},
				{
					"name": "SelectEmployeeColumns2"
				},
				{
					"name": "SelectEmployeeColumns1"
				},
				{
					"name": "DeriveIsNull"
				},
				{
					"name": "LookupExistingFactDesignerTeamBridge"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "FilterNonInsertsUpdates"
				},
				{
					"name": "SelectLookupDeslect"
				},
				{
					"name": "MetadataUpdate"
				},
				{
					"name": "WindowRemoveDuplicates"
				},
				{
					"name": "FilterRemoveDuplicates"
				}
			],
			"script": "\nparameters{\n\tMasterProcessNumber as string ('1')\n}\nsource(output(\n\t\tPROCESS_NUMBER as decimal(38,18),\n\t\tDIVISION as decimal(38,18),\n\t\tMARKET as decimal(38,18),\n\t\tBRANCH as decimal(38,18),\n\t\tSALENUM as decimal(38,18),\n\t\tLINE as decimal(38,18),\n\t\tTYPE as string,\n\t\tTRANTYPE as string,\n\t\tTRANSEQUENCE as decimal(38,18),\n\t\tORGSALENUM as decimal(38,18),\n\t\tBILLEDDATE as timestamp,\n\t\tWRITTENDATE as timestamp,\n\t\tITEM as string,\n\t\tGROUPSKU as string,\n\t\tQUANTITY as decimal(38,18),\n\t\tGROSSSLS as decimal(38,18),\n\t\tGRPSKUDSCT as decimal(38,18),\n\t\tRTLREDUCTION as decimal(38,18),\n\t\tOVRDISCOUNT as decimal(38,18),\n\t\tPROMODISCOUNT as decimal(38,18),\n\t\tUNCLASSDSCT as decimal(38,18),\n\t\tUNDLVALLOW as decimal(38,18),\n\t\tRETAIL as decimal(38,18),\n\t\tTAXAMT1 as decimal(38,18),\n\t\tTAXAMT2 as decimal(38,18),\n\t\tCIDNUM as decimal(38,18),\n\t\tCIDPRFSEQ as decimal(38,18),\n\t\tSALEASC as decimal(38,18),\n\t\tSALEEMPID as decimal(38,18),\n\t\tCOSALEASC as decimal(38,18),\n\t\tCOSALEEMPID as decimal(38,18),\n\t\tDESIGNER as decimal(38,18),\n\t\tCODESIGNER as decimal(38,18),\n\t\tOVRRSNID as decimal(38,18),\n\t\tOVRRSNDESC as string,\n\t\tOVRRSNCMT as string,\n\t\tOVRUSRFNAM as string,\n\t\tOVRUSRLNAM as string,\n\t\tSALEPROMO as string,\n\t\tCREDITPROMO as string,\n\t\tDELIVERYDC as decimal(38,18),\n\t\tLANDEDCOST as decimal(38,18),\n\t\tCHARGETYPE as string,\n\t\tINTERNETSALE as string,\n\t\tEXCHANGETYPE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Sourcetbdwbld\nsource(output(\n\t\tPROCESS_NUMBER as decimal(38,18),\n\t\tDIVISION as decimal(38,18),\n\t\tMARKET as decimal(38,18),\n\t\tBRANCH as decimal(38,18),\n\t\tSALENUM as decimal(38,18),\n\t\tLINE as decimal(38,18),\n\t\tTYPE as string,\n\t\tTRANTYPE as string,\n\t\tTRANSEQUENCE as decimal(38,18),\n\t\tORGSALENUM as decimal(38,18),\n\t\tWRITTENDATE as timestamp,\n\t\tWRITTENTIME as decimal(38,18),\n\t\tITEM as string,\n\t\tGROUPSKU as string,\n\t\tQUANTITY as decimal(38,18),\n\t\tGROSSSLS as decimal(38,18),\n\t\tGRPSKUDSCT as decimal(38,18),\n\t\tRTLREDUCTION as decimal(38,18),\n\t\tOVRDISCOUNT as decimal(38,18),\n\t\tPROMODISCOUNT as decimal(38,18),\n\t\tUNCLASSDSCT as decimal(38,18),\n\t\tRETAIL as decimal(38,18),\n\t\tTAXAMT1 as decimal(38,18),\n\t\tTAXAMT2 as decimal(38,18),\n\t\tCIDNUM as decimal(38,18),\n\t\tCIDPRFSEQ as decimal(38,18),\n\t\tSALEASC as decimal(38,18),\n\t\tSALEEMPID as decimal(38,18),\n\t\tCOSALEASC as decimal(38,18),\n\t\tCOSALEEMPID as decimal(38,18),\n\t\tDESIGNER as decimal(38,18),\n\t\tCODESIGNER as decimal(38,18),\n\t\tOVRRSNID as decimal(38,18),\n\t\tOVRRSNDESC as string,\n\t\tOVRRSNCMT as string,\n\t\tOVRUSRFNAM as string,\n\t\tOVRUSRLNAM as string,\n\t\tSALEPROMO as string,\n\t\tCREDITPROMO as string,\n\t\tDELIVERYDC as decimal(38,18),\n\t\tCHARGETYPE as string,\n\t\tINTERNETSALE as string,\n\t\tEXCHANGETYPE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Sourcetbdwwrt\nsource(output(\n\t\tTeam_sk as integer,\n\t\tTeamMember1_ID_nk as integer,\n\t\tTeamMember1_Name as string,\n\t\tTeamMember2_ID_nk as integer,\n\t\tTeamMember2_Name as string,\n\t\tTeamType_nk as string,\n\t\tHashKey as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceDimTeam\nsource(output(\n\t\tEmployee_sk as integer,\n\t\tEmployee_ID_nk as string,\n\t\tDesigner_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT Employee_sk, Employee_ID_nk, Designer_ID FROM DW.Dim_Employee WHERE Designer_ID<>0',\n\tformat: 'query') ~> SourceDimEmployee\nsource(output(\n\t\tDesigner_Team_Bridge_sk as integer,\n\t\tCount as integer,\n\t\tDesigner_Team_fk as integer,\n\t\tDesigner_fk as integer,\n\t\tTeamMember1_ID_nk as integer,\n\t\tTeamMember2_ID_nk as integer,\n\t\tDesigner_ID_nk as integer,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceFactDesignerTeamBridge\nDeriveOrdered2 aggregate(groupBy(TeamMember1 = TeamMember1,\n\t\tTeamMember2 = TeamMember2,\n\t\tTeamType = TeamType),\n\tCount = sum(1)) ~> DistinctDesignerTeamMembers\nSourcetbdwbld select(mapColumn(\n\t\tSALEASC,\n\t\tCOSALEASC,\n\t\tDESIGNER,\n\t\tCODESIGNER,\n\t\tDIVISION,\n\t\tMARKET,\n\t\tSALEEMPID,\n\t\tCOSALEEMPID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectPairDownColumns2\nDeriveIsNull derive(TeamMember1 = greatest(DESIGNER,CODESIGNER),\n\t\tTeamMember2 = least(DESIGNER,CODESIGNER),\n\t\tTeamType = 'Designer') ~> DeriveOrdered2\nSourcetbdwwrt select(mapColumn(\n\t\tSALEASC,\n\t\tCOSALEASC,\n\t\tDESIGNER,\n\t\tCODESIGNER,\n\t\tDIVISION,\n\t\tMARKET,\n\t\tSALEEMPID,\n\t\tCOSALEEMPID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelecttbdwwrtPairColumns\nSelectPairDownColumns2, SelecttbdwwrtPairColumns union(byName: true)~> UnionWithWritten1\nSelectEmployeeColumns1 derive(SourceSystem_fk = 0,\n\t\tETLBatchID_Insert = toInteger($MasterProcessNumber),\n\t\tETLBatchID_Update = toInteger($MasterProcessNumber),\n\t\tCount = 1,\n\t\tEmployee_fk = iifNull(Employee_fk, 0)) ~> DeriveMetadata1\nDerivedConvertToInt, SourceDimTeam lookup(DerivedConvertToInt@TeamMember1_ID_nk == SourceDimTeam@TeamMember1_ID_nk\n\t&& DerivedConvertToInt@TeamMember2_ID_nk == SourceDimTeam@TeamMember2_ID_nk\n\t&& SelectTeamMemberName2@TeamType_nk == SourceDimTeam@TeamType_nk,\n\tbroadcast: 'none')~> LookupDimTeam\nLookupDimTeam select(mapColumn(\n\t\tTeamMember1_ID_nk = {DerivedConvertToInt@TeamMember1_ID_nk},\n\t\tTeamMember2_ID_nk = {DerivedConvertToInt@TeamMember2_ID_nk},\n\t\tTeamType_nk = {SelectTeamMemberName2@TeamType_nk},\n\t\tTeam_sk\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectDimTeam\nDistinctDesignerTeamMembers select(mapColumn(\n\t\tTeamMember1_ID_nk = TeamMember1,\n\t\tTeamMember2_ID_nk = TeamMember2,\n\t\tTeamType_nk = TeamType,\n\t\tCount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTeamMemberName2\nSelectDimTeam derive(Team_fk = iifNull(Team_sk, 0)) ~> DeriveReplaceNulls\nSelectTeamMemberName2 derive(TeamMember1_ID_nk = iifNull(toInteger(TeamMember1_ID_nk), 0),\n\t\tTeamMember2_ID_nk = iifNull(toInteger(TeamMember2_ID_nk), 0)) ~> DerivedConvertToInt\nDeriveReplaceNulls, SourceDimEmployee lookup(TeamMember1_ID_nk == Designer_ID,\n\tbroadcast: 'none')~> LookDimEmployee1\nDeriveReplaceNulls, SourceDimEmployee lookup(TeamMember2_ID_nk == Designer_ID,\n\tbroadcast: 'none')~> LookDimEmployee2\nSelectEmployeeColumns2 derive(SourceSystem_fk = 0,\n\t\tETLBatchID_Insert = toInteger($MasterProcessNumber),\n\t\tETLBatchID_Update = toInteger($MasterProcessNumber),\n\t\tCount = 1,\n\t\tEmployee_fk = iifNull(Employee_fk, 0)) ~> DeriveMetadata2\nDeriveMetadata1, DeriveMetadata2 union(byName: true)~> UnionTeamMember1AndTeamMember2\nLookDimEmployee2 select(mapColumn(\n\t\tTeamMember1_ID_nk,\n\t\tTeamMember2_ID_nk,\n\t\tTeam_fk,\n\t\tEmployee_fk = Employee_sk,\n\t\tEmployee_ID_nk = TeamMember2_ID_nk\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectEmployeeColumns2\nLookDimEmployee1 select(mapColumn(\n\t\tTeamMember1_ID_nk,\n\t\tTeamMember2_ID_nk,\n\t\tTeam_fk,\n\t\tEmployee_fk = Employee_sk,\n\t\tDesigner_ID_nk = TeamMember1_ID_nk\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectEmployeeColumns1\nUnionWithWritten1 derive(DESIGNER = iifNull(DESIGNER, 0),\n\t\tCODESIGNER = iifNull(CODESIGNER, 0)) ~> DeriveIsNull\nUnionTeamMember1AndTeamMember2, SourceFactDesignerTeamBridge lookup(UnionTeamMember1AndTeamMember2@TeamMember1_ID_nk == SourceFactDesignerTeamBridge@TeamMember1_ID_nk\n\t&& UnionTeamMember1AndTeamMember2@TeamMember2_ID_nk == SourceFactDesignerTeamBridge@TeamMember2_ID_nk\n\t&& UnionTeamMember1AndTeamMember2@Designer_ID_nk == SourceFactDesignerTeamBridge@Designer_ID_nk,\n\tbroadcast: 'none')~> LookupExistingFactDesignerTeamBridge\nFilterNonInsertsUpdates alterRow(insertIf(isNull(Designer_Team_Bridge_sk_Dest)),\n\tupdateIf((!isNull(Designer_Team_Bridge_sk_Dest)&&(Team_fk!=Designer_Team_fk_Dest||Employee_fk!=Designer_fk_Dest)))) ~> AlterRow1\nFilterRemoveDuplicates filter(isNull(Designer_Team_Bridge_sk_Dest) || (!isNull(Designer_Team_Bridge_sk_Dest) && (Team_fk!=Designer_Team_fk_Dest || Employee_fk!=Designer_fk_Dest))) ~> FilterNonInsertsUpdates\nLookupExistingFactDesignerTeamBridge select(mapColumn(\n\t\tTeamMember1_ID_nk = {UnionTeamMember1AndTeamMember2@TeamMember1_ID_nk},\n\t\tTeamMember2_ID_nk = {UnionTeamMember1AndTeamMember2@TeamMember2_ID_nk},\n\t\tTeam_fk,\n\t\tEmployee_fk,\n\t\tDesigner_ID_nk = {UnionTeamMember1AndTeamMember2@Designer_ID_nk},\n\t\tSourceSystem_fk = {UnionTeamMember1AndTeamMember2@SourceSystem_fk},\n\t\tETLBatchID_Insert = {UnionTeamMember1AndTeamMember2@ETLBatchID_Insert},\n\t\tETLBatchID_Update = {UnionTeamMember1AndTeamMember2@ETLBatchID_Update},\n\t\tCount = {UnionTeamMember1AndTeamMember2@Count},\n\t\tDesigner_Team_Bridge_sk_Dest = Designer_Team_Bridge_sk,\n\t\tDesigner_Team_fk_Dest = Designer_Team_fk,\n\t\tDesigner_fk_Dest = Designer_fk,\n\t\tETLBatchID_Insert_Dest = {SourceFactDesignerTeamBridge@ETLBatchID_Insert}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectLookupDeslect\nSelectLookupDeslect derive(ETLBatchID_Insert = iifNull(ETLBatchID_Insert_Dest, ETLBatchID_Insert),\n\t\tDesigner_ID_nk = iifNull(Designer_ID_nk,0)) ~> MetadataUpdate\nMetadataUpdate window(over(TeamMember1_ID_nk = TeamMember1_ID_nk,\n\t\tTeamMember2_ID_nk = TeamMember2_ID_nk,\n\t\tDesigner_ID_nk = Designer_ID_nk),\n\tasc(TeamMember1_ID_nk, true),\n\tasc(TeamMember2_ID_nk, true),\n\tasc(Designer_ID_nk, true),\n\tDupeCount = rowNumber()) ~> WindowRemoveDuplicates\nWindowRemoveDuplicates filter(DupeCount==1) ~> FilterRemoveDuplicates\nAlterRow1 sink(input(\n\t\tDesigner_Team_Bridge_sk as integer,\n\t\tCount as integer,\n\t\tDesigner_Team_fk as integer,\n\t\tDesigner_fk as integer,\n\t\tTeamMember1_ID_nk as integer,\n\t\tTeamMember2_ID_nk as integer,\n\t\tDesigner_ID_nk as integer,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['TeamMember1_ID_nk','TeamMember2_ID_nk','Designer_ID_nk'],\n\tformat: 'table',\n\tmapColumn(\n\t\tCount,\n\t\tDesigner_Team_fk = Team_fk,\n\t\tDesigner_fk = Employee_fk,\n\t\tTeamMember1_ID_nk,\n\t\tTeamMember2_ID_nk,\n\t\tDesigner_ID_nk,\n\t\tSourceSystem_fk,\n\t\tETLBatchID_Insert,\n\t\tETLBatchID_Update\n\t)) ~> SinkFactDesignerTeamBridge"
		}
	}
}