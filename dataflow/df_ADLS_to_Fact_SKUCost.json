{
	"name": "df_ADLS_to_Fact_SKUCost",
	"properties": {
		"folder": {
			"name": "Fact_DataFlows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ADLSG2_staging_masterdata_product_pcpmcrpcst",
						"type": "DatasetReference"
					},
					"name": "SourcePcpmcrpcst"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSQL_toFact_SKUCost",
						"type": "DatasetReference"
					},
					"name": "SourceFactSKUCost"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_Dim_SKU",
						"type": "DatasetReference"
					},
					"name": "SourceSKU"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzureSQL_toFact_SKUCost",
						"type": "DatasetReference"
					},
					"name": "SinkFactSKUCost"
				}
			],
			"transformations": [
				{
					"name": "DvClDataTypes"
				},
				{
					"name": "SelectColumnNames"
				},
				{
					"name": "FilterEffectiveDate"
				},
				{
					"name": "DistinctRows"
				},
				{
					"name": "FilterDuplicates"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "LookupSKUCostFact"
				},
				{
					"name": "SelectFactColumns"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "JoinSKUDim"
				},
				{
					"name": "FilterUpdates"
				},
				{
					"name": "SelectSKU"
				},
				{
					"name": "SetBandedEndDate"
				}
			],
			"script": "parameters{\n\tMasterProcessNumber as string ('1')\n}\nsource(output(\n\t\tCCTYPE as string,\n\t\tCCSKU as string,\n\t\tCCEFFDATE as decimal(38,18),\n\t\tCCAMOUNT as decimal(38,18),\n\t\tCCUSER as string,\n\t\tCCTERM as string,\n\t\tCCCRTDATE as decimal(38,18),\n\t\tCCCRTTIME as decimal(38,18),\n\t\tCCFILLER as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> SourcePcpmcrpcst\nsource(output(\n\t\tSKU_Cost_sk as integer,\n\t\tCost as decimal(9,2),\n\t\tSKU_fk as integer,\n\t\tStartDate_fk as integer,\n\t\tEndDate_fk as integer,\n\t\tCost_Type as string,\n\t\tTerms as string,\n\t\tCreatingUser as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceFactSKUCost\nsource(output(\n\t\tSKU_sk as integer,\n\t\tSKU_Unformatted_nk as string,\n\t\tSKU as string,\n\t\tSKU_Description as string,\n\t\tVendor_Color_ID as integer,\n\t\tVendor_Color as string,\n\t\tVendor_Color_Hex_Code as string,\n\t\tVendor_Finish_ID as integer,\n\t\tVendor_Finish as string,\n\t\tConfiguration_ID as integer,\n\t\tConfiguration as string,\n\t\tDisplay_Configuration as string,\n\t\tSize_ID as integer,\n\t\tSize as string,\n\t\tOriginal_Vendor_ID as string,\n\t\tOriginal_Vendor_sk as integer,\n\t\tCollection_ID as integer,\n\t\tCollection as string,\n\t\tGroup_ID as integer,\n\t\tGroup as string,\n\t\tProduct_ID as integer,\n\t\tProduct as string,\n\t\tReporting_Class_Code as string,\n\t\tReporting_Class as string,\n\t\tSuper_Category_ID as integer,\n\t\tSuper_Category as string,\n\t\tCategory_ID as integer,\n\t\tCategory as string,\n\t\tSub_Category_ID as integer,\n\t\tSub_Category as string,\n\t\tCurrent_EDLP_Price as decimal(10,4),\n\t\tGood_Better_Best_Category as string,\n\t\tGBB_Price_Point as string,\n\t\tMotion as string,\n\t\tDining_Style as string,\n\t\tBedroom_Style as string,\n\t\tStandalone_bed as string,\n\t\tSKU_Type as string,\n\t\tStocked as string,\n\t\tType_of_SKU as string,\n\t\tVendor as string,\n\t\tVendor_fk as integer,\n\t\tFactory as string,\n\t\tFactory_fk as integer,\n\t\tSpecial_Order_Available as string,\n\t\tVendor_Lead_Time as integer,\n\t\tProduct_Lead_Time as integer,\n\t\tGroup_Active_Start as date,\n\t\tGroup_Active_End as date,\n\t\tSKU_Flow_StartDate as date,\n\t\tSKU_Flow_EndDate as date,\n\t\tStocked_at_EDC as integer,\n\t\tStocked_at_WDC as integer,\n\t\tStocked_at_FDC as integer,\n\t\tGroup_Web_Status as integer,\n\t\tSKU_Web_Status as integer,\n\t\tMerchandising_Approval as string,\n\t\tMarketing_Approval as string,\n\t\tLineup_Status as string,\n\t\tAvailable_to_Purchase as string,\n\t\tShip_Length as integer,\n\t\tShip_Width as integer,\n\t\tShip_Height as integer,\n\t\tLength as integer,\n\t\tWidth as integer,\n\t\tHeight as integer,\n\t\tWeight as decimal(5,1),\n\t\tPrep_Cubes as decimal(5,1),\n\t\tCubes as decimal(5,1),\n\t\tPrep_Flag as string,\n\t\tAssembly_Required as string,\n\t\tAssembly_Time as decimal(4,1),\n\t\tLeave_in_Box as string,\n\t\tManufacturer_ID as string,\n\t\tUPC as long,\n\t\tHTS_Number as long,\n\t\tOriginal_SKU as string,\n\t\tRepresentative_Item as string,\n\t\tGroup_Rating_Count as integer,\n\t\tProduct_Rating_Count as integer,\n\t\tGroup_Star_Rating as decimal(6,4),\n\t\tProduct_Star_Rating as decimal(6,4),\n\t\tMade_in_ID as integer,\n\t\tMade_in_City as string,\n\t\tMade_in_State as string,\n\t\tMade_in_Country as string,\n\t\tOrigin_ID as integer,\n\t\tOrigin_City as string,\n\t\tOrigin_State as string,\n\t\tOrigin_Country as string,\n\t\tCopy as string,\n\t\tWeb_Description as string,\n\t\tPrice_Tag_Description as string,\n\t\tPrimary_Common_Color as string,\n\t\tPrimary_Common_Finish as string,\n\t\tFloor_Sample_Bedding as string,\n\t\tEmployee_Bedding as string,\n\t\tAccessory_Story as string,\n\t\t{3D_Model_Required} as string,\n\t\t{3D_Model} as string,\n\t\tScene_7_Image_URL as string,\n\t\t{Havertys.com_URL} as string,\n\t\tAdvertised_Price as decimal(7,2),\n\t\tHashKey as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSKU\nFilterEffectiveDate derive(CCEFFDATE = toInteger(CCEFFDATE),\n\t\tCCAMOUNT = toInteger(CCAMOUNT),\n\t\tCCSKU = trim(CCSKU),\n\t\tCCTYPE = trim(CCTYPE),\n\t\tCCTERM = trim(CCTERM)) ~> DvClDataTypes\nSetBandedEndDate select(mapColumn(\n\t\tSKU = CCSKU,\n\t\tType = CCTYPE,\n\t\tStartDate = CCEFFDATE,\n\t\tCost = CCAMOUNT,\n\t\tUser = CCUSER,\n\t\tTerm = CCTERM,\n\t\tRowNumber,\n\t\tEndDate,\n\t\tRowNumber1\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectColumnNames\nSourcePcpmcrpcst filter(CCEFFDATE>=20100101 && CCEFFDATE<=toInteger(concat(toString(year(currentDate('EST'))), '1231'))) ~> FilterEffectiveDate\nDvClDataTypes window(over(CCTYPE,\n\t\tCCSKU,\n\t\tCCEFFDATE,\n\t\tCCUSER),\n\tdesc(CCTYPE, true),\n\tdesc(CCSKU, true),\n\tdesc(CCEFFDATE, true),\n\tRowNumber = rowNumber()) ~> DistinctRows\nDistinctRows filter(RowNumber == 1) ~> FilterDuplicates\nSelectFactColumns derive(SourceSystem_Fk = 0,\n\t\tETLBatchID_Insert = iifNull(ETLBatchID_InsertFact, toInteger($MasterProcessNumber)),\n\t\tETLBatchID_Update = toInteger($MasterProcessNumber),\n\t\tEndDate = iif(EndDate>20201231, 20201231, EndDate)) ~> DerivedColumn1\nJoinSKUDim, SourceFactSKUCost lookup(SKU_sk == SKU_fk\n\t&& Type == Cost_Type\n\t&& StartDate == StartDate_fk\n\t&& User == CreatingUser,\n\tbroadcast: 'none')~> LookupSKUCostFact\nLookupSKUCostFact select(mapColumn(\n\t\tType,\n\t\tSKU_sk,\n\t\tStartDate,\n\t\tCost = SelectColumnNames@Cost,\n\t\tUser,\n\t\tTerms = Term,\n\t\tSKU_Cost_sk,\n\t\tETLBatchID_InsertFact = ETLBatchID_Insert,\n\t\tETLBatchID_UpdateFact = ETLBatchID_Update,\n\t\tEndDate,\n\t\tSKU_fk,\n\t\tStartDate_fk,\n\t\tEndDate_fk,\n\t\tCreatingUser,\n\t\tCost_Type,\n\t\tTerm_Fact = Terms\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFactColumns\nFilterUpdates alterRow(insertIf(isNull(SKU_Cost_sk)),\n\tupdateIf(!isNull(SKU_Cost_sk)&&(EndDate!=EndDate_fk||Terms!=Term_Fact))) ~> AlterRow1\nSelectColumnNames, SelectSKU join(SKU == SKU_Unformatted_nk,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinSKUDim\nDerivedColumn1 filter(isNull(SKU_Cost_sk)||(!isNull(SKU_Cost_sk) \r\n&&\r\n (EndDate!=EndDate_fk|| Term_Fact!=Terms))) ~> FilterUpdates\nSourceSKU select(mapColumn(\n\t\tSKU_sk,\n\t\tSKU_Unformatted_nk\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSKU\nFilterDuplicates window(over(CCTYPE,\n\t\tCCSKU,\n\t\tCCUSER),\n\tdesc(CCEFFDATE, true),\n\tEndDate = iifNull(lead(CCEFFDATE,1),20991231),\n\t\tRowNumber1 = rowNumber()) ~> SetBandedEndDate\nAlterRow1 sink(input(\n\t\tSKU_Cost_sk as integer,\n\t\tCost as decimal(9,2),\n\t\tSKU_fk as integer,\n\t\tStartDate_fk as integer,\n\t\tEndDate_fk as integer,\n\t\tCost_Type as string,\n\t\tTerms as string,\n\t\tCreatingUser as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SKU_fk','Cost_Type','StartDate_fk','CreatingUser'],\n\tformat: 'table',\n\tmapColumn(\n\t\tCost,\n\t\tSKU_fk = SKU_sk,\n\t\tStartDate_fk = StartDate,\n\t\tEndDate_fk = EndDate,\n\t\tCost_Type = Type,\n\t\tTerms,\n\t\tCreatingUser = User,\n\t\tSourceSystem_fk = SourceSystem_Fk,\n\t\tETLBatchID_Insert,\n\t\tETLBatchID_Update\n\t)) ~> SinkFactSKUCost"
		}
	}
}