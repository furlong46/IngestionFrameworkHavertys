{
	"name": "df_ADLS_to_Dim_Date_Holiday_Name",
	"properties": {
		"folder": {
			"name": "Dim_DataFlows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ADLSG2_staging_masterdata_date_SalesEventsCSV",
						"type": "DatasetReference"
					},
					"name": "SalesEventParquet"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_DW_DimDate",
						"type": "DatasetReference"
					},
					"name": "DateDimSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_DW_DimDate",
						"type": "DatasetReference"
					},
					"name": "DateDimSink"
				}
			],
			"transformations": [
				{
					"name": "JoiningHoliday"
				},
				{
					"name": "SettingHoliday"
				},
				{
					"name": "StringtoDate"
				},
				{
					"name": "UpdateIfDifferent"
				}
			],
			"script": "source(output(\n\t\tDate as string,\n\t\tDOW as string,\n\t\tDateTag as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> SalesEventParquet\nsource(output(\n\t\tDate_sk as integer,\n\t\tIsworkday_Store as integer,\n\t\tIsworkday_Delivery as integer,\n\t\tCalendar_date as date,\n\t\tCalendar_name_sht as string,\n\t\tCalendar_name_lng as string,\n\t\tCalendar_year_day_number as integer,\n\t\tCalendar_year_day_name as string,\n\t\tCalendar_quarter_day_number as integer,\n\t\tCalendar_quarter_day_name as string,\n\t\tCalendar_month_day_number as integer,\n\t\tCalendar_month_day_name as string,\n\t\tCalendar_weekday_number as integer,\n\t\tCalendar_weekday_code as string,\n\t\tCalendar_weekday_name as string,\n\t\tCalendar_week_of_month_number as integer,\n\t\tCalendar_week_of_month_name as string,\n\t\tCalendar_week_of_year_number as integer,\n\t\tCalendar_week_of_year_name as string,\n\t\tCalendar_month_number as integer,\n\t\tCalendar_month_code as string,\n\t\tCalendar_month_name as string,\n\t\tCalendar_quarter_number as integer,\n\t\tCalendar_quarter_code as string,\n\t\tCalendar_quarter_name as string,\n\t\tCalendar_month_week_year_number as integer,\n\t\tCalendar_month_week_year_code as string,\n\t\tCalendar_month_year_number as integer,\n\t\tCalendar_month_year_code as string,\n\t\tCalendar_quarter_year_number as integer,\n\t\tCalendar_quarter_year_code as string,\n\t\tCalendar_quarter_year_name as string,\n\t\tCalendar_year_number as integer,\n\t\tCalendar_year_name as string,\n\t\tReporting_week_number as integer,\n\t\tReporting_weekending_date as date,\n\t\tReporting_weekending_name as string,\n\t\tReporting_weekday_number as integer,\n\t\tReporting_month_number as integer,\n\t\tReporting_month_code as string,\n\t\tReporting_month_name as string,\n\t\tReporting_quarter_number as integer,\n\t\tReporting_quarter_code as string,\n\t\tReporting_quarter_name as string,\n\t\tReporting_month_year_number as integer,\n\t\tReporting_month_year_code as string,\n\t\tReporting_quarter_year_number as integer,\n\t\tReporting_quarter_year_code as string,\n\t\tReporting_quarter_year_name as string,\n\t\tReporting_year_number as integer,\n\t\tReporting_year_name as string,\n\t\tHoliday_name as string,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DateDimSource\nDateDimSource, StringtoDate join(Calendar_date == Date,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoiningHoliday\nJoiningHoliday select(mapColumn(\n\t\tHoliday_name = DateTag,\n\t\tDate_sk,\n\t\tHoliday_name_original = Holiday_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SettingHoliday\nSalesEventParquet derive(Date = toDate(Date,'MM/dd/yyyy')) ~> StringtoDate\nSettingHoliday alterRow(updateIf(Holiday_name != Holiday_name_original)) ~> UpdateIfDifferent\nUpdateIfDifferent sink(input(\n\t\tDate_sk as integer,\n\t\tIsworkday_Store as integer,\n\t\tIsworkday_Delivery as integer,\n\t\tCalendar_date as date,\n\t\tCalendar_name_sht as string,\n\t\tCalendar_name_lng as string,\n\t\tCalendar_year_day_number as integer,\n\t\tCalendar_year_day_name as string,\n\t\tCalendar_quarter_day_number as integer,\n\t\tCalendar_quarter_day_name as string,\n\t\tCalendar_month_day_number as integer,\n\t\tCalendar_month_day_name as string,\n\t\tCalendar_weekday_number as integer,\n\t\tCalendar_weekday_code as string,\n\t\tCalendar_weekday_name as string,\n\t\tCalendar_week_of_month_number as integer,\n\t\tCalendar_week_of_month_name as string,\n\t\tCalendar_week_of_year_number as integer,\n\t\tCalendar_week_of_year_name as string,\n\t\tCalendar_month_number as integer,\n\t\tCalendar_month_code as string,\n\t\tCalendar_month_name as string,\n\t\tCalendar_quarter_number as integer,\n\t\tCalendar_quarter_code as string,\n\t\tCalendar_quarter_name as string,\n\t\tCalendar_month_week_year_number as integer,\n\t\tCalendar_month_week_year_code as string,\n\t\tCalendar_month_year_number as integer,\n\t\tCalendar_month_year_code as string,\n\t\tCalendar_quarter_year_number as integer,\n\t\tCalendar_quarter_year_code as string,\n\t\tCalendar_quarter_year_name as string,\n\t\tCalendar_year_number as integer,\n\t\tCalendar_year_name as string,\n\t\tReporting_week_number as integer,\n\t\tReporting_weekending_date as date,\n\t\tReporting_weekending_name as string,\n\t\tReporting_weekday_number as integer,\n\t\tReporting_month_number as integer,\n\t\tReporting_month_code as string,\n\t\tReporting_month_name as string,\n\t\tReporting_quarter_number as integer,\n\t\tReporting_quarter_code as string,\n\t\tReporting_quarter_name as string,\n\t\tReporting_month_year_number as integer,\n\t\tReporting_month_year_code as string,\n\t\tReporting_quarter_year_number as integer,\n\t\tReporting_quarter_year_code as string,\n\t\tReporting_quarter_year_name as string,\n\t\tReporting_year_number as integer,\n\t\tReporting_year_name as string,\n\t\tHoliday_name as string,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Date_sk'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DateDimSink"
		}
	}
}