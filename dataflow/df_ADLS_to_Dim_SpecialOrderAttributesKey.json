{
	"name": "df_ADLS_to_Dim_SpecialOrderAttributesKey",
	"properties": {
		"folder": {
			"name": "Dim_DataFlows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_ADLSG2parquet_staging_masterdata_product_tbsoatyp",
						"type": "DatasetReference"
					},
					"name": "SourceTbsoatyp"
				},
				{
					"dataset": {
						"referenceName": "ds_ADLSG2_SpecialOrderCSV",
						"type": "DatasetReference"
					},
					"name": "SourceSpecialOrderCSV"
				},
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_Dim_SpecialOrderAttributesKey",
						"type": "DatasetReference"
					},
					"name": "SqlSpecialOrderDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_AzureSqlTable_Dim_SpecialOrderAttributesKey",
						"type": "DatasetReference"
					},
					"name": "SinkDimSpecialOrderAttributeKey"
				}
			],
			"transformations": [
				{
					"name": "SelectTbsoatyp"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "LookupCSV"
				},
				{
					"name": "DvClInteger"
				},
				{
					"name": "Select"
				},
				{
					"name": "LookupExistingDim"
				},
				{
					"name": "DvClHashBatchIDTypes"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DvCleanUp"
				},
				{
					"name": "FilterUpdates"
				},
				{
					"name": "WindowDuplicateRows"
				},
				{
					"name": "FilterDuplicateRows"
				}
			],
			"script": "\nparameters{\n\tMasterProcessNumber as string ('1')\n}\nsource(output(\n\t\tATRTYPID as decimal(38,18),\n\t\tATTRIBUTE as string,\n\t\tCREATED as timestamp,\n\t\tUPDATED as timestamp,\n\t\tSYNCHED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> SourceTbsoatyp\nsource(output(\n\t\t{Super Type} as string,\n\t\tAttribute as string,\n\t\t{Attribute ID} as string,\n\t\t{Use for Vendor Color} as string,\n\t\t{Use for Vendor Finish} as string,\n\t\t{No Longer Used} as string,\n\t\t{Use in DimSpecialOrderAttributes} as string,\n\t\t{Comments/Questions} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceSpecialOrderCSV\nsource(output(\n\t\tSpecial_Order_Attributes_Key_sk as integer,\n\t\tAttribute_Type_ID_nk as integer,\n\t\tAttribute as string,\n\t\tAttribute_Group as string,\n\t\tHashKey as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SqlSpecialOrderDim\nSourceTbsoatyp select(mapColumn(\n\t\tAttribute_Type_ID_nk = ATRTYPID,\n\t\tAttribute = ATTRIBUTE\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectTbsoatyp\nFilterUpdates alterRow(updateIf(!isNull(Special_Order_Attributes_Key_sk)&&HashKeyStage!=HashKeyDim),\n\tinsertIf(isNull(Special_Order_Attributes_Key_sk))) ~> AlterRow\nDvCleanUp, DvClInteger lookup(Attribute_Type_ID_nk == {Attribute ID},\n\tbroadcast: 'none')~> LookupCSV\nSourceSpecialOrderCSV derive({Attribute ID} = toInteger({Attribute ID})) ~> DvClInteger\nLookupCSV select(mapColumn(\n\t\tAttribute_Type_ID_nk,\n\t\tAttribute = {DvCleanUp@Attribute},\n\t\tAttribute_Group = {Super Type}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Select\nDerivedColumn1, SqlSpecialOrderDim lookup(Select@Attribute_Type_ID_nk == SqlSpecialOrderDim@Attribute_Type_ID_nk,\n\tbroadcast: 'none')~> LookupExistingDim\nSelectColumns derive(ETLBatchID_Insert = iifNull(ETLBatchID_InsertDim, toInteger($MasterProcessNumber)),\n\t\tETLBatchID_Update = toInteger($MasterProcessNumber),\n\t\teach(match(type=='string'), $$ = iif(isNull($$),'', $$))) ~> DvClHashBatchIDTypes\nLookupExistingDim select(mapColumn(\n\t\tAttribute_Type_ID_nk = {Select@Attribute_Type_ID_nk},\n\t\tAttribute = {Select@Attribute},\n\t\tAttribute_Group = {Select@Attribute_Group},\n\t\tHashKeyStage,\n\t\tSourceSystem_fk = {DerivedColumn1@SourceSystem_fk},\n\t\tSpecial_Order_Attributes_Key_sk,\n\t\tAttribute_Type_ID_nk_dim = {SqlSpecialOrderDim@Attribute_Type_ID_nk},\n\t\tHashKeyDim = HashKey,\n\t\tETLBatchID_InsertDim = ETLBatchID_Insert,\n\t\tETLBatchID_UpdateDim = ETLBatchID_Update\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectColumns\nSelect derive(HashKeyStage = sha1(Attribute,Attribute_Group),\n\t\tSourceSystem_fk = 0) ~> DerivedColumn1\nSelectTbsoatyp derive(each(match(type=='string'), $$ = iifNull(trim($$),'')),\n\t\tAttribute_Type_ID_nk = toInteger(Attribute_Type_ID_nk)) ~> DvCleanUp\nFilterDuplicateRows filter(isNull(Special_Order_Attributes_Key_sk)||(!isNull(Special_Order_Attributes_Key_sk)&&HashKeyStage!=HashKeyDim)) ~> FilterUpdates\nDvClHashBatchIDTypes window(over(Attribute_Type_ID_nk = Attribute_Type_ID_nk),\n\tasc(Attribute_Type_ID_nk, true),\n\tDupeRow = rowNumber()) ~> WindowDuplicateRows\nWindowDuplicateRows filter(DupeRow==1) ~> FilterDuplicateRows\nAlterRow sink(input(\n\t\tSpecial_Order_Attributes_Key_sk as integer,\n\t\tAttribute_Type_ID_nk as integer,\n\t\tAttribute as string,\n\t\tAttribute_Group as string,\n\t\tHashKey as string,\n\t\tSourceSystem_fk as integer,\n\t\tETLBatchID_Insert as integer,\n\t\tETLBatchID_Update as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Attribute_Type_ID_nk'],\n\tformat: 'table',\n\tmapColumn(\n\t\tAttribute_Type_ID_nk,\n\t\tAttribute,\n\t\tAttribute_Group,\n\t\tHashKey = HashKeyStage,\n\t\tSourceSystem_fk,\n\t\tETLBatchID_Insert,\n\t\tETLBatchID_Update\n\t)) ~> SinkDimSpecialOrderAttributeKey"
		}
	}
}